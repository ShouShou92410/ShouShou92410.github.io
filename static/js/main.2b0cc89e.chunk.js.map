{"version":3,"sources":["utility/Context.js","services/Firebase.js","root/MenuBarView.jsx","root/SignInModalView.jsx","root/SignInModal.js","root/MenuBar.js","about/AboutView.jsx","about/About.js","management/table/ManageUserView.jsx","management/table/ManageUser.js","management/table/ManageVocabularyView.jsx","management/table/ManageVocabulary.js","management/ManagementView.jsx","management/Management.js","quiz/QuizSettingView.jsx","quiz/QuizSetting.js","quiz/QuizQuestionView.jsx","quiz/QuizQuestion.js","quiz/QuizResultView.jsx","quiz/QuizResult.js","quiz/QuizView.jsx","quiz/Quiz.js","blog/BlogPostCardView.jsx","blog/BlogView.jsx","blog/Blog.js","root/HomeView.jsx","root/ContentView.jsx","root/Content.js","root/App.js","index.js"],"names":["UserContext","React","createContext","currentUser","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","appId","measurementId","signOut","auth","database","MenuBarView","handleSignOut","handleSignInModalOpen","className","bg","variant","Brand","as","Link","to","Collapse","Nav","Button","size","onClick","SignInModalView","show","handleClose","handleSignInInfoChange","handleSignIn","signingIn","signInError","Modal","onHide","Header","closeButton","Title","Alert","Form","onSubmit","Body","Group","Label","Control","type","name","onChange","Footer","disabled","Spinner","animation","SignInModal","handleSignInModalClose","useState","signInInfo","setSignInInfo","setSigningIn","setSignInError","validateSignInInfo","email","password","e","target","value","preventDefault","signInWithEmailAndPassword","catch","error","then","code","message","MenuBar","useContext","signInModalVisible","setSignInModalVisible","AboutView","Row","Col","lg","Image","src","roundedCircle","href","About","ManageUserView","Heading","Tabs","defaultActiveKey","Tab","eventKey","title","sm","ManageUser","ManageVocabularyView","formInput","handleFormChange","handleSubmit","chinese","english","kanji","gojuuon","ManageVocabulary","setFormInput","ref","push","set","createVocabulary","ManagementView","tableList","path","map","table","key","NavLink","activeClassName","Management","QuizSettingView","block","QuizSetting","QuizQuestionView","Card","border","QuizQuestion","QuizResultView","QuizResult","QuizView","modeList","Quiz","BlogPostCardView","Subtitle","Text","BlogView","Blog","HomeView","ContentView","Container","fluid","Content","App","setCurrentUser","authorizing","setAuthorizing","useEffect","onAuthStateChanged","authUser","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b0cc89e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const UserContext = React.createContext({ currentUser: null });\n","import firebase from 'firebase/app';\nimport 'firebase/database';\n//import 'firebase/analytics';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n//firebase.analytics();\n\nexport { firebase };\n\nexport const signIn = (email, password) => {\n  return firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const signOut = () => {\n  firebase.auth().signOut();\n};\n\n/* Database operations */\nconst database = firebase.database();\n\nexport const createVocabulary = ({ chinese, english, kanji, gojuuon }) => {\n  database\n    .ref('/vocabulary')\n    .push()\n    .set({\n      chinese,\n      english,\n      kanji,\n      gojuuon\n    });\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NavBar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\n\nfunction MenuBarView({ currentUser, handleSignOut, handleSignInModalOpen }) {\n  return (\n    <div className=\"sticky-nav\">\n      <NavBar bg=\"dark\" variant=\"dark\">\n        <NavBar.Brand as={Link} to=\"/\">\n          Home\n        </NavBar.Brand>\n        <NavBar.Collapse className=\"justify-content-end\">\n          <Nav>\n            <Nav.Link as={Link} to=\"/about\">\n              About\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/quiz\">\n              Quiz\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/blog\">\n              Blog\n            </Nav.Link>\n            {currentUser ? (\n              <>\n                <Nav.Link as={Link} to=\"/management\">\n                  Management\n                </Nav.Link>\n                <Button variant=\"secondary\" size=\"sm\" className=\"m-1\" onClick={handleSignOut}>\n                  Sign Out\n                </Button>\n              </>\n            ) : (\n              <Button variant=\"secondary\" size=\"sm\" className=\"m-1\" onClick={handleSignInModalOpen}>\n                Sign In\n              </Button>\n            )}\n          </Nav>\n        </NavBar.Collapse>\n      </NavBar>\n    </div>\n  );\n}\n\nexport default MenuBarView;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction SignInModalView({\n  show,\n  handleClose,\n  handleSignInInfoChange,\n  handleSignIn,\n  signingIn,\n  signInError\n}) {\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Sign In</Modal.Title>\n      </Modal.Header>\n      {signInError ? (\n        <Alert variant=\"danger\" className=\"text-center\">\n          <h5 className=\"mb-0\">{signInError}</h5>\n        </Alert>\n      ) : (\n        ''\n      )}\n      <Form onSubmit={handleSignIn}>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" name=\"email\" onChange={handleSignInInfoChange} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" name=\"password\" onChange={handleSignInInfoChange} />\n          </Form.Group>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\" disabled={signingIn}>\n            {signingIn ? (\n              <>\n                <Spinner as=\"span\" animation=\"border\" size=\"sm\" />{' '}\n              </>\n            ) : (\n              ''\n            )}\n            Sign In\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default SignInModalView;\n","import React, { useState } from 'react';\r\nimport { signIn } from '../services/Firebase';\r\nimport SignInModalView from './SignInModalView';\r\n\r\nfunction SignInModal({ show, handleSignInModalClose }) {\r\n  const [signInInfo, setSignInInfo] = useState({});\r\n  const [signingIn, setSigningIn] = useState(false);\r\n  const [signInError, setSignInError] = useState('');\r\n\r\n  const handleClose = () => {\r\n    handleSignInModalClose();\r\n    setSignInInfo({});\r\n    setSignInError('');\r\n  };\r\n\r\n  const handleSignInInfoChange = (e) =>\r\n    setSignInInfo({ ...signInInfo, [e.target.name]: e.target.value });\r\n\r\n  const handleSignIn = (e) => {\r\n    e.preventDefault();\r\n    setSigningIn(true);\r\n\r\n    if (validateSignInInfo(signInInfo.email, signInInfo.password)) {\r\n      signIn(signInInfo.email, signInInfo.password)\r\n        .then(() => {\r\n          setSigningIn(false);\r\n          handleClose();\r\n        })\r\n        .catch((error) => {\r\n          setSigningIn(false);\r\n\r\n          switch (error.code) {\r\n            case 'auth/user-not-found':\r\n              setSignInError('User not found.');\r\n              break;\r\n            case 'auth/wrong-password':\r\n              setSignInError('Incorrect password.');\r\n              break;\r\n            default:\r\n              setSignInError(error.message);\r\n              break;\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  // true = pass, false = fail\r\n  const validateSignInInfo = (email, password) => {\r\n    if (!email) {\r\n      setSigningIn(false);\r\n      setSignInError('Invalid email.');\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      setSigningIn(false);\r\n      setSignInError('Invalid password.');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <SignInModalView\r\n      show={show}\r\n      handleClose={handleClose}\r\n      handleSignInInfoChange={handleSignInInfoChange}\r\n      handleSignIn={handleSignIn}\r\n      signingIn={signingIn}\r\n      signInError={signInError}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SignInModal;\r\n","import React, { useContext, useState } from 'react';\nimport { UserContext } from '../utility/Context';\nimport { signOut as handleSignOut } from '../services/Firebase';\nimport MenuBarView from './MenuBarView';\nimport SignInModal from './SignInModal';\n\nfunction MenuBar() {\n  const { currentUser } = useContext(UserContext);\n  const [signInModalVisible, setSignInModalVisible] = useState(false);\n\n  const handleSignInModalOpen = () => setSignInModalVisible(true);\n  const handleSignInModalClose = () => setSignInModalVisible(false);\n\n  return (\n    <>\n      <SignInModal show={signInModalVisible} handleSignInModalClose={handleSignInModalClose} />\n      <MenuBarView\n        currentUser={currentUser}\n        handleSignOut={handleSignOut}\n        handleSignInModalOpen={handleSignInModalOpen}\n      />\n    </>\n  );\n}\n\nexport default MenuBar;\n","import React from 'react';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction AboutView() {\n  return (\n    <>\n      <Row>\n        <Col lg={2} />\n        <Col lg={7}>\n          <h1>About</h1>\n          <h5>Who?</h5>\n          <p className=\"fs-18\">\n            My name is 文宥翔 or Yu-Hsiang Wen in English, you can also called me Sean Wen. I'm a\n            Taiwanese that came to Canada at the age of 12, after I finished my elementary school.\n            Currently I'm a University of Calgary student majoring in Computer Science.\n          </p>\n        </Col>\n        <Col lg={2}>\n          <Row className=\"justify-content-md-center\">\n            <Image src={`${process.env.PUBLIC_URL}/pp_200px.jpg`} roundedCircle />\n          </Row>\n          <Row className=\"justify-content-md-center\">\n            <p className=\"text-center\">\n              Hello, I'm Sean.\n              <br />\n              Welcome to my website!\n            </p>\n          </Row>\n          <Row className=\"justify-content-md-center\">\n            <a href=\"https://github.com/ShouShou92410\" target=\"_blank\">\n              <Image src={`${process.env.PUBLIC_URL}/github.png`} />\n            </a>\n            <a href=\"https://www.linkedin.com/in/yu-hsiang-wen-b61745144/\" target=\"_blank\">\n              <Image src={`${process.env.PUBLIC_URL}/linkedin.png`} />\n            </a>\n            <a href=\"https://steamcommunity.com/id/Seavanas\" target=\"_blank\">\n              <Image src={`${process.env.PUBLIC_URL}/steam.png`} />\n            </a>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default AboutView;\n","import React from 'react';\nimport AboutView from './AboutView';\n\nfunction About() {\n  return <AboutView />;\n}\n\nexport default About;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction ManageUserView() {\n  return (\n    <>\n      <Row>\n        <Col>\n          <h1 className=\"mb-4\">Manage User</h1>\n        </Col>\n      </Row>\n\n      <Alert variant={'warning'} className=\"text-center mt-2\">\n        <Alert.Heading>Please use the Firebase console to manage the user.</Alert.Heading>\n        Will have the functionality on the back-end in the future.\n      </Alert>\n      <Tabs defaultActiveKey=\"insert\" className=\"dark\">\n        <Tab eventKey=\"insert\" title=\"Insert\">\n          <Form className=\"mt-4\">\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">Email</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"email\" name=\"email\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">Password</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"password\" name=\"password\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">User Name</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"text\" name=\"userName\" />\n              </Col>\n            </Form.Group>\n          </Form>\n          <Button variant=\"primary\" type=\"submit\" className=\"float-right\">\n            Insert\n          </Button>\n        </Tab>\n        <Tab eventKey=\"update\" title=\"Update\">\n          <Form className=\"mt-4\">\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">Email</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"email\" name=\"email\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">Password</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"password\" name=\"password\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">User Name</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"text\" name=\"userName\" />\n              </Col>\n            </Form.Group>\n\n            <Button variant=\"warning\" type=\"submit\" className=\"float-right\">\n              Update\n            </Button>\n          </Form>\n        </Tab>\n        <Tab eventKey=\"delete\" title=\"Delete\">\n          <Form className=\"mt-4\">\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">ID</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"text\" name=\"id\" />\n              </Col>\n            </Form.Group>\n\n            <Button variant=\"danger\" type=\"submit\" className=\"float-right\">\n              Delete\n            </Button>\n          </Form>\n        </Tab>\n      </Tabs>\n    </>\n  );\n}\n\nexport default ManageUserView;\n","import React from 'react';\nimport ManageUserView from './ManageUserView';\n\nfunction ManageUser() {\n  return <ManageUserView />;\n}\n\nexport default ManageUser;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction ManageVocabularyView({ formInput, handleFormChange, handleSubmit }) {\n  return (\n    <>\n      <Row>\n        <Col>\n          <h1 className=\"mb-4\">Manage Vocabulary</h1>\n        </Col>\n      </Row>\n\n      <Tabs defaultActiveKey=\"insert\" className=\"dark\">\n        <Tab eventKey=\"insert\" title=\"Insert\">\n          <Form className=\"mt-4\" onSubmit={handleSubmit}>\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">Chinese</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control\n                  type=\"text\"\n                  name=\"chinese\"\n                  value={formInput.chinese || ''}\n                  onChange={handleFormChange}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">English</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control\n                  type=\"text\"\n                  name=\"english\"\n                  value={formInput.english || ''}\n                  onChange={handleFormChange}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">Kanji</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control\n                  type=\"text\"\n                  name=\"kanji\"\n                  value={formInput.kanji || ''}\n                  onChange={handleFormChange}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">Gojuuon</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control\n                  type=\"text\"\n                  name=\"gojuuon\"\n                  value={formInput.gojuuon || ''}\n                  onChange={handleFormChange}\n                />\n              </Col>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\" className=\"float-right\">\n              Insert\n            </Button>\n          </Form>\n        </Tab>\n        <Tab eventKey=\"update\" title=\"Update\">\n          <Alert variant={'warning'} className=\"text-center mt-2\">\n            <Alert.Heading>Not finish.</Alert.Heading>\n            Consider a table with rows of record to interact with.\n          </Alert>\n\n          <Form className=\"mt-4\">\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">ID</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"text\" name=\"id\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">Chinese</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"text\" name=\"chinese\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">English</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"text\" name=\"english\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">Kanji</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"text\" name=\"kanji\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">Gojuuon</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"text\" name=\"gojuuon\" />\n              </Col>\n            </Form.Group>\n\n            <Button variant=\"warning\" type=\"submit\" className=\"float-right\">\n              Update\n            </Button>\n          </Form>\n        </Tab>\n        <Tab eventKey=\"delete\" title=\"Delete\">\n          <Alert variant={'warning'} className=\"text-center mt-2\">\n            <Alert.Heading>Not finish.</Alert.Heading>\n            Consider a table with rows of record to interact with.\n          </Alert>\n\n          <Form className=\"mt-4\">\n            <Form.Group as={Row}>\n              <Col sm={2} className=\"text-center\">\n                <Form.Label className=\"mt-2\">ID</Form.Label>\n              </Col>\n              <Col sm={10}>\n                <Form.Control type=\"text\" name=\"id\" />\n              </Col>\n            </Form.Group>\n\n            <Button variant=\"danger\" type=\"submit\" className=\"float-right\">\n              Delete\n            </Button>\n          </Form>\n        </Tab>\n      </Tabs>\n    </>\n  );\n}\n\nexport default ManageVocabularyView;\n","import React, { useState } from 'react';\nimport { createVocabulary } from '../../services/Firebase';\nimport ManageVocabularyView from './ManageVocabularyView';\n\nfunction ManageVocabulary() {\n  const [formInput, setFormInput] = useState({});\n\n  const handleFormChange = (e) => setFormInput({ ...formInput, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createVocabulary(formInput);\n    setFormInput({});\n  };\n\n  return (\n    <ManageVocabularyView\n      formInput={formInput}\n      handleFormChange={handleFormChange}\n      handleSubmit={handleSubmit}\n    />\n  );\n}\n\nexport default ManageVocabulary;\n","import React from 'react';\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\nimport ManageUser from './table/ManageUser';\nimport ManageVocabulary from './table/ManageVocabulary';\n\nfunction ManagementView({ tableList }) {\n  return (\n    <>\n      <Row>\n        <Col lg={2} />\n        <Col lg={7}>\n          <Switch>\n            <Route path=\"/management/user\">\n              <ManageUser />\n            </Route>\n            <Route path=\"/management/vocabulary\">\n              <ManageVocabulary />\n            </Route>\n            <Route path=\"/management\">\n              <ManageUser />\n            </Route>\n          </Switch>\n        </Col>\n        <Col lg={2}>\n          <Nav className=\"d-block\">\n            {tableList.map((table) => (\n              <Nav.Link\n                key={table}\n                as={NavLink}\n                to={`/management/${table}`}\n                className=\"dark\"\n                activeClassName=\"active\">\n                {table}\n              </Nav.Link>\n            ))}\n          </Nav>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default ManagementView;\n","import React from 'react';\nimport ManagementView from './ManagementView';\n\nfunction Management() {\n  const tableList = ['user', 'vocabulary'];\n\n  return <ManagementView tableList={tableList} />;\n}\n\nexport default Management;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nfunction QuizSettingView() {\n  return (\n    <>\n      <h1>Quick Mode</h1>\n      <p>Quick mode description</p>\n      <Form className=\"mt-4\">\n        <Form.Group as={Row}>\n          <Col sm={2} className=\"text-center\">\n            <Form.Label className=\"mt-2\">Quiz Mode</Form.Label>\n          </Col>\n          <Col sm={10}>\n            <Form.Control as=\"select\" name=\"mode\">\n              <option>Quick</option>\n              <option>Manual</option>\n              <option>Survival</option>\n            </Form.Control>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Col sm={2} className=\"text-center\">\n            <Form.Label className=\"mt-2\">Quiz Format</Form.Label>\n          </Col>\n          <Col sm={10}>\n            <Form.Control as=\"select\" name=\"format\">\n              {/* JP → US */}\n              <option>&#x1f1ef;&#x1f1f5; → &#x1F1FA;&#x1F1F8;</option>\n              {/* JP → TW */}\n              <option>&#x1f1ef;&#x1f1f5; → &#x1F1F9;&#x1F1FC;</option>\n              {/* US → JP */}\n              <option>&#x1F1FA;&#x1F1F8; → &#x1f1ef;&#x1f1f5;</option>\n              {/* TW → JP */}\n              <option>&#x1F1F9;&#x1F1FC; → &#x1f1ef;&#x1f1f5;</option>\n            </Form.Control>\n          </Col>\n        </Form.Group>\n\n        {/* Quick Mode */}\n        <Form.Group as={Row}>\n          <Col sm={2} className=\"text-center\">\n            <Form.Label className=\"mt-2\">Total Question</Form.Label>\n          </Col>\n          <Col sm={10}>\n            {/* Only accepts int, https://stackoverflow.com/questions/43067719/how-to-allow-only-numbers-in-textbox-in-reactjs */}\n            <Form.Control as=\"input\" />\n          </Col>\n        </Form.Group>\n\n        {/* Manual Mode, might be too hard to create a selection list */}\n\n        {/* Survival Mode */}\n        <Form.Group as={Row}>\n          <Col sm={2} className=\"text-center\">\n            <Form.Label className=\"mt-2\">Total Lives</Form.Label>\n          </Col>\n          <Col sm={10}>\n            {/* Only accepts int, https://stackoverflow.com/questions/43067719/how-to-allow-only-numbers-in-textbox-in-reactjs */}\n            <Form.Control as=\"input\" />\n          </Col>\n        </Form.Group>\n        <Row>\n          <Col sm={4} />\n          <Col sm={4} className=\"text-center\">\n            <Button variant=\"success\" type=\"submit\" block>\n              Start\n            </Button>\n          </Col>\n          <Col sm={4} />\n        </Row>\n      </Form>\n    </>\n  );\n}\n\nexport default QuizSettingView;\n","import React from 'react';\nimport QuizSettingView from './QuizSettingView';\n\nfunction QuizSetting() {\n  return <QuizSettingView />;\n}\n\nexport default QuizSetting;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction QuizQuestionView() {\n  return (\n    <>\n      {/* Card border, show/hide alerts */}\n      <Card border=\"danger\">\n        <Card.Header>Question 1</Card.Header>\n        <Card.Body className=\"text-center\">\n          <Card.Title className=\"mt-3 mb-5\">\n            <h1>あか</h1>\n          </Card.Title>\n          <div className=\"mt-5 mb-3\">\n            <Row className=\"m-3\">\n              <Col sm={3} />\n              <Col sm={3}>\n                <Button variant=\"outline-dark\" block>\n                  Red\n                </Button>\n              </Col>\n              <Col sm={3}>\n                <Button variant=\"outline-dark\" block>\n                  Blue\n                </Button>\n              </Col>\n              <Col sm={3} />\n            </Row>\n            <Row className=\"m-3\">\n              <Col sm={3} />\n              <Col sm={3}>\n                <Button variant=\"outline-dark\" block>\n                  Yellow\n                </Button>\n              </Col>\n              <Col sm={3}>\n                <Button variant=\"outline-dark\" block>\n                  Green\n                </Button>\n              </Col>\n              <Col sm={3} />\n            </Row>\n          </div>\n          <Row className=\"m-3\">\n            <Col sm={3} />\n            <Col sm={6}>\n              <Button variant=\"secondary\" block>\n                Confirm\n              </Button>\n            </Col>\n            <Col sm={3} />\n          </Row>\n          <Alert variant=\"danger\">\n            <Row>\n              <Col />\n              <Col>\n                <h3>WRONG</h3>\n              </Col>\n              <Col>\n                <Button variant=\"outline-danger\" className=\"float-right\">\n                  Next\n                </Button>\n              </Col>\n            </Row>\n          </Alert>\n          <Alert variant=\"success\">\n            <Row>\n              <Col />\n              <Col>\n                <h3>CORRECT</h3>\n              </Col>\n              <Col>\n                <Button variant=\"outline-success\" className=\"float-right\">\n                  Next\n                </Button>\n              </Col>\n            </Row>\n          </Alert>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default QuizQuestionView;\n","import React from 'react';\nimport QuizQuestionView from './QuizQuestionView';\n\nfunction QuizQuestion() {\n  return <QuizQuestionView />;\n}\n\nexport default QuizQuestion;\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction QuizResultView() {\r\n  return (\r\n    <>\r\n      {/* Card border, show/hide alerts */}\r\n      <Card border=\"danger\" className=\"w-75 mt-2 mb-2\">\r\n        <Card.Header>Question 1</Card.Header>\r\n        <Card.Body className=\"text-center pt-0\">\r\n          <Card.Title className=\"mt-2\">\r\n            <h2>あか</h2>\r\n          </Card.Title>\r\n          <Row className=\"mt-3 mb-3\">\r\n            <Col sm={6}>\r\n              <Button variant=\"outline-dark\" block>\r\n                Red\r\n              </Button>\r\n            </Col>\r\n            <Col sm={6}>\r\n              <Button variant=\"outline-dark\" block>\r\n                Blue\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-3\">\r\n            <Col sm={6}>\r\n              <Button variant=\"outline-dark\" block>\r\n                Yellow\r\n              </Button>\r\n            </Col>\r\n            <Col sm={6}>\r\n              <Button variant=\"outline-dark\" block>\r\n                Green\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuizResultView;\r\n","import React from 'react';\nimport QuizResultView from './QuizResultView';\n\nfunction QuizResult() {\n  return <QuizResultView />;\n}\n\nexport default QuizResult;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport QuizSetting from './QuizSetting';\nimport QuizQuestion from './QuizQuestion';\nimport QuizResult from './QuizResult';\n\nfunction QuizView({ modeList }) {\n  return (\n    <>\n      <Row>\n        <Col lg={2} />\n        <Col lg={7}>\n          <QuizSetting />\n          <QuizQuestion />\n          <QuizResult />\n          <QuizResult />\n          <QuizResult />\n        </Col>\n        <Col lg={2}>\n          <h4>description</h4>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default QuizView;\n","import React from 'react';\nimport QuizView from './QuizView';\n\nfunction Quiz() {\n  const modeList = ['quick', 'manual', 'survival'];\n  /* Manages quiz settings, question generation, result displays */\n\n  return <QuizView modeList={modeList} />;\n}\n\nexport default Quiz;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction BlogPostCardView() {\r\n  const blogPostID = 123;\r\n  return (\r\n    <>\r\n      <Card className=\"m-3\">\r\n        <Card.Header>\r\n          <Row>\r\n            <Col sm={9}>\r\n              <Card.Title className=\"m-0\">Blog Post Title</Card.Title>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <Card.Subtitle className=\"m-0 text-muted float-right\">2020/01/31</Card.Subtitle>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body className=\"pb-1\">\r\n          <Card.Text className=\"mb-0 blog-post-preview\">\r\n            Limit the text to only 3 lines in preview. <br />\r\n            line 2. <br />\r\n            line 3. <br />\r\n            line 4, which you shouldn't be able to see.\r\n          </Card.Text>\r\n          <Card.Link as={Link} to={`/blog/${blogPostID}`} className=\"dark float-right text-sm\">\r\n            read more\r\n          </Card.Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogPostCardView;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport BlogPostCardView from './BlogPostCardView';\r\n\r\nfunction BlogView() {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col lg={2} />\r\n        <Col lg={7}>\r\n          <h1>Blog</h1>\r\n          <hr />\r\n          <BlogPostCardView />\r\n          <BlogPostCardView />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogView;\r\n","import React from 'react';\nimport BlogView from './BlogView';\n\nfunction Blog() {\n  return <BlogView />;\n}\n\nexport default Blog;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction HomeView() {\n  return (\n    <>\n      <Row>\n        <Col lg={2} />\n        <Col lg={7}>\n          <h1>Welcome!</h1>\n          <p className=\"fs-18\">\n            This is my personal website, it hosts my personal projects and progress. You can see\n            them by clicking the links in the navigation bar over on the top. The website is using\n            React for its front-end, Firebase for its database, and it is hosting as a GitHub user\n            page, you can check out the source code{' '}\n            <a\n              href=\"https://github.com/ShouShou92410/ShouShou92410.github.io/tree/Source-Code\"\n              target=\"_blank\">\n              Here\n            </a>\n            . In the future, I want to create a back-end server and have the front-end use the APIs\n            to fetch data.\n          </p>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default HomeView;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport About from '../about/About';\nimport Management from '../management/Management';\nimport Quiz from '../quiz/Quiz';\nimport Blog from '../blog/Blog';\nimport HomeView from './HomeView';\n\nfunction ContentView({ currentUser }) {\n  return (\n    <Container fluid>\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/quiz\">\n          <Quiz />\n        </Route>\n        <Route path=\"/blog\">\n          <Blog />\n        </Route>\n        {currentUser && (\n          <Route path=\"/management\">\n            <Management />\n          </Route>\n        )}\n        <Route path=\"/\">\n          <HomeView />\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default ContentView;\n","import React, { useContext } from 'react';\nimport { UserContext } from '../utility/Context';\nimport ContentView from './ContentView';\n\nfunction Content() {\n  const { currentUser } = useContext(UserContext);\n\n  return <ContentView currentUser={currentUser} />;\n}\n\nexport default Content;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { UserContext } from '../utility/Context';\nimport { firebase } from '../services/Firebase';\nimport MenuBar from './MenuBar';\nimport Content from './Content';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [authorizing, setAuthorizing] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setCurrentUser(authUser);\n        setAuthorizing(true);\n      } else {\n        setCurrentUser(null);\n        setAuthorizing(true);\n      }\n    });\n  }, []);\n\n  return authorizing ? (\n    <UserContext.Provider value={{ currentUser }}>\n      <BrowserRouter>\n        <MenuBar />\n        <Content />\n      </BrowserRouter>\n    </UserContext.Provider>\n  ) : (\n    <div>Waiting for auth...</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './root/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}