{"version":3,"sources":["utility/Context.js","utility/Enumeration.js","services/Firebase.js","root/MenuBarView.jsx","root/SignInModalView.jsx","root/SignInModal.js","root/MenuBar.js","root/HomeView.jsx","about/AboutSidePanelView.jsx","about/AboutView.jsx","about/About.js","management/table/ManageVocabularyView.jsx","utility/FileHelper.js","management/table/ManageVocabulary.js","management/ManagementView.jsx","management/Management.js","quiz/initialization/QuizInitializationView.jsx","quiz/initialization/QuizInitialization.js","quiz/ongoing/QuizOptionView.jsx","quiz/ongoing/QuizQuestionCardView.jsx","quiz/ongoing/QuizQuestionCard.js","quiz/ongoing/quick/QuizQuickOngoingView.jsx","quiz/ongoing/quick/QuizQuickOngoing.js","quiz/finish/QuizResultCardView.jsx","quiz/finish/QuizFinishView.jsx","quiz/finish/QuizFinish.js","quiz/Quiz.js","blog/list/BlogPostCardView.jsx","blog/list/BlogPostListView.jsx","blog/list/BlogPostList.js","blog/read/BlogPostReadView.jsx","blog/read/BlogPostRead.js","blog/new/BlogPostNewView.jsx","blog/new/BlogPostNew.js","blog/edit/BlogPostEditView.jsx","blog/edit/BlogPostEdit.js","blog/BlogView.jsx","blog/Blog.js","root/ContentView.jsx","root/Content.js","root/App.js","index.js"],"names":["UserContext","React","createContext","currentUser","QuizEnumeration","Object","freeze","State","INITIALIZATION","ONGOING","FINISH","Mode","QUICK","SURVIVAL","Format","JPK_ZH","JPNK_ZH","ZH_JPK","ZH_JPNK","JPK_EN","JPNK_EN","EN_JPK","EN_JPNK","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","appId","measurementId","signOut","auth","database","getBlogPost","id","ref","once","insertVocabulary","chinese","english","gojuuon","kanji","partofspeech","push","set","getVocabularyQuestion","quizSetting","Promise","resolve","reject","firebaseJsonToArray","then","allVocabulary","relevantVocabularies","format","filter","vocab","mode","shuffleArray","slice","total","questions","map","vocabulary","index","question","questionNumber","ID","questionText","options","questionIndex","findIndex","option","randomIndex","Math","floor","random","splice","value","catch","err","array","i","length","j","getCurrentDateTime","now","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","getPromise","snapshot","entries","val","record","MenuBarView","handleSignOut","handleSignInModalOpen","className","bg","variant","Brand","as","Link","to","Collapse","Nav","Row","Button","size","onClick","SignInModalView","show","handleClose","handleSignInInfoChange","handleSignIn","signingIn","signInError","Modal","onHide","Header","closeButton","Title","Alert","Form","onSubmit","Body","Group","Label","Control","type","name","onChange","Footer","disabled","Spinner","animation","SignInModal","handleSignInModalClose","useState","signInInfo","setSignInInfo","setSigningIn","setSignInError","validateSignInInfo","email","password","e","target","preventDefault","signInWithEmailAndPassword","error","code","message","MenuBar","useContext","signInModalVisible","setSignInModalVisible","HomeView","Col","lg","href","rel","AboutSidePanelView","Image","src","roundedCircle","AboutView","About","ManageVocabularyView","fileInput","handleFileChange","handleInsert","Tabs","defaultActiveKey","Tab","eventKey","title","sm","File","custom","label","hasFileExtension","file","desiredExtension","split","pop","toLowerCase","CSVtoJSON","csvFile","fr","FileReader","onerror","abort","onload","result","readAsText","readFile","readResult","fileContent","keys","x","shift","key","trim","Set","jsonResult","row","rowObject","forEach","alert","ManageVocabulary","setFileInput","a","FileHelper","Vocabulary","files","ManagementView","tables","path","table","NavLink","activeClassName","Management","QuizSettingView","handleFormChange","handleSubmit","values","renderOtherSettingString","block","QuizInitialization","setQuizSetting","setQuizState","useEffect","QuizInitializationView","test","validateFormInput","QuizOptionView","selectedOptionID","isCorrect","handleOptionSelect","QuizQuestionCardView","vocabQuestion","handleConfirm","handleNext","Card","renderResultAlert","QuizQuestionCard","handleNextQuestion","setSelectedOptionID","setIsCorrect","QuizQuickOngoingView","currentQuestion","QuizQuickOngoing","setQuizResults","setQuestions","results","setResults","setQuestionIndex","setCurrentQuestion","fetchQuestion","QuizResultCardView","questionResult","renderOption","buttonVariant","QuizFinishView","quizResults","handleAgain","QuizFinish","Quiz","quizState","renderView","BlogPostCardView","post","Subtitle","datePosted","Text","content","BlogPostListView","posts","BlogPostList","setPosts","reverse","fetchAllBlogPost","BlogPostReadView","handleDelete","style","height","align","BlogPostRead","window","location","setID","setPost","history","useHistory","remove","BlogPostNewView","placeholder","rows","BlogPostNew","formInput","setFormInput","uid","createBlogPost","BlogPostEditView","BlogPostEdit","update","editBlogPost","BlogView","Blog","ContentView","Container","fluid","Content","App","setCurrentUser","authorizing","setAuthorizing","onAuthStateChanged","authUser","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdd37f87.chunk.js","sourcesContent":["import React from 'react';\n\nexport const UserContext = React.createContext({ currentUser: null });\n","export const QuizEnumeration = Object.freeze({\n  State: Object.freeze({\n    INITIALIZATION: 'Initialization',\n    ONGOING: 'Ongoing',\n    FINISH: 'Finish'\n  }),\n  Mode: Object.freeze({\n    QUICK: 'Quick',\n    SURVIVAL: 'Survival'\n  }),\n  Format: Object.freeze({\n    JPK_ZH: 'Japanese w/ Kanji → Chinese',\n    JPNK_ZH: 'Japanese w/o Kanji → Chinese',\n    ZH_JPK: 'Chinese → Japanese w/ Kanji',\n    ZH_JPNK: 'Chinese → Japanese w/o Kanji',\n    JPK_EN: 'Japanese w/ Kanji → English',\n    JPNK_EN: 'Japanese w/o Kanji → English',\n    EN_JPK: 'English → Japanese w/ Kanji',\n    EN_JPNK: 'English → Japanese w/o Kanji'\n  })\n});\n","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n//import 'firebase/analytics';\r\nimport 'firebase/auth';\r\nimport { QuizEnumeration } from '../utility/Enumeration';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n//firebase.analytics();\r\n\r\nexport { firebase };\r\n\r\nexport const signIn = (email, password) => {\r\n  return firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const signOut = () => {\r\n  firebase.auth().signOut();\r\n};\r\n\r\n/* Database operations */\r\nconst database = firebase.database();\r\n\r\nexport const getAllBlogPost = () => {\r\n  return firebaseJsonToArray(database.ref('/blog').once('value'));\r\n};\r\n\r\nexport const getBlogPost = (id) => {\r\n  return database.ref(`/blog/${id}`).once('value');\r\n};\r\n\r\nexport const editBlogPost = ({ id, title, content }) => {\r\n  database.ref(`/blog/${id}`).update({\r\n    title,\r\n    content\r\n  });\r\n};\r\n\r\nexport const deleteBlogPost = (id) => {\r\n  return database.ref(`/blog/${id}`).remove();\r\n};\r\n\r\nexport const createBlogPost = ({ title, content }) => {\r\n  database\r\n    .ref('/blog')\r\n    .push()\r\n    .set({\r\n      title,\r\n      content,\r\n      datePosted: getCurrentDateTime(),\r\n      uid: firebase.auth().currentUser.uid\r\n    });\r\n};\r\nexport const insertVocabulary = ({ chinese, english, gojuuon, kanji, partofspeech }) => {\r\n  database\r\n    .ref('/vocabulary')\r\n    .push()\r\n    .set({ chinese, english, gojuuon, kanji, partofspeech });\r\n};\r\n\r\n/* Move login to a back-end server in the future */\r\nexport const getVocabularyQuestion = (quizSetting) => {\r\n  return new Promise((resolve, reject) => {\r\n    firebaseJsonToArray(database.ref('/vocabulary').once('value'))\r\n      .then((allVocabulary) => {\r\n        let relevantVocabularies = [];\r\n\r\n        switch (quizSetting.format) {\r\n          case QuizEnumeration.Format.JPK_ZH:\r\n          case QuizEnumeration.Format.ZH_JPK:\r\n          case QuizEnumeration.Format.JPK_EN:\r\n          case QuizEnumeration.Format.EN_JPK:\r\n            allVocabulary = allVocabulary.filter((vocab) => vocab.kanji);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        switch (quizSetting.mode) {\r\n          case QuizEnumeration.Mode.QUICK:\r\n            relevantVocabularies = shuffleArray(allVocabulary).slice(0, quizSetting.total);\r\n            break;\r\n          case QuizEnumeration.Mode.SURVIVAL:\r\n            relevantVocabularies = shuffleArray(allVocabulary);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        const questions = relevantVocabularies.map((vocabulary, index) => {\r\n          let question = {\r\n            questionNumber: index + 1,\r\n            ID: vocabulary.ID,\r\n            partofspeech: vocabulary.partofspeech\r\n          };\r\n          let questionText = '';\r\n          let options = shuffleArray(allVocabulary).slice(0, 4);\r\n\r\n          const questionIndex = options.findIndex((option) => option.ID === question.ID);\r\n          const randomIndex = Math.floor(Math.random() * 4);\r\n          if (questionIndex === -1) options.splice(randomIndex, 1, vocabulary);\r\n\r\n          switch (quizSetting.format) {\r\n            case QuizEnumeration.Format.JPK_ZH:\r\n              questionText = vocabulary.kanji;\r\n              options = options.map((option) => {\r\n                return { ID: option.ID, value: option.chinese };\r\n              });\r\n              break;\r\n            case QuizEnumeration.Format.JPNK_ZH:\r\n              questionText = vocabulary.gojuuon;\r\n              options = options.map((option) => {\r\n                return { ID: option.ID, value: option.chinese };\r\n              });\r\n              break;\r\n            case QuizEnumeration.Format.ZH_JPK:\r\n              questionText = vocabulary.chinese;\r\n              options = options.map((option) => {\r\n                return { ID: option.ID, value: option.kanji };\r\n              });\r\n              break;\r\n            case QuizEnumeration.Format.ZH_JPNK:\r\n              questionText = vocabulary.chinese;\r\n              options = options.map((option) => {\r\n                return { ID: option.ID, value: option.gojuuon };\r\n              });\r\n              break;\r\n            case QuizEnumeration.Format.JPK_EN:\r\n              questionText = vocabulary.kanji;\r\n              options = options.map((option) => {\r\n                return { ID: option.ID, value: option.english };\r\n              });\r\n              break;\r\n            case QuizEnumeration.Format.JPNK_EN:\r\n              questionText = vocabulary.gojuuon;\r\n              options = options.map((option) => {\r\n                return { ID: option.ID, value: option.english };\r\n              });\r\n              break;\r\n            case QuizEnumeration.Format.EN_JPK:\r\n              questionText = vocabulary.english;\r\n              options = options.map((option) => {\r\n                return { ID: option.ID, value: option.kanji };\r\n              });\r\n              break;\r\n            case QuizEnumeration.Format.EN_JPNK:\r\n              questionText = vocabulary.english;\r\n              options = options.map((option) => {\r\n                return { ID: option.ID, value: option.gojuuon };\r\n              });\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          question['question'] = questionText;\r\n          question['options'] = options;\r\n\r\n          return question;\r\n        });\r\n\r\n        resolve(questions);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction getCurrentDateTime() {\r\n  let now = new Date();\r\n  let date = `${now.getFullYear()}/${now.getMonth() + 1}/${now.getDate()}`;\r\n  let time = `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}`;\r\n\r\n  return `${date} ${time}`;\r\n}\r\n\r\n/* Converts firebase's records from json structure to array structure. */\r\nfunction firebaseJsonToArray(getPromise) {\r\n  return new Promise((resolve, reject) => {\r\n    getPromise\r\n      .then((snapshot) => {\r\n        resolve(\r\n          Object.entries(snapshot.val() || []).map((record) => {\r\n            return { ID: record[0], ...record[1] };\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NavBar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\n\nfunction MenuBarView({ currentUser, handleSignOut, handleSignInModalOpen }) {\n  return (\n    <div className=\"sticky-nav\">\n      <NavBar bg=\"dark\" variant=\"dark\">\n        <NavBar.Brand as={Link} to=\"/\">\n          Home\n        </NavBar.Brand>\n        <NavBar.Collapse className=\"justify-content-end\">\n          <Nav>\n            <Row>\n              <Nav.Link as={Link} to=\"/about\">\n                About\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/quiz\">\n                Quiz\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/blog\">\n                Blog\n              </Nav.Link>\n              {currentUser ? (\n                <>\n                  <Nav.Link as={Link} to=\"/management\">\n                    Management\n                  </Nav.Link>\n                  <Button variant=\"secondary\" size=\"sm\" className=\"m-1\" onClick={handleSignOut}>\n                    Sign Out\n                  </Button>\n                </>\n              ) : (\n                <Button\n                  variant=\"secondary\"\n                  size=\"sm\"\n                  className=\"m-1\"\n                  onClick={handleSignInModalOpen}>\n                  Sign In\n                </Button>\n              )}\n            </Row>\n          </Nav>\n        </NavBar.Collapse>\n      </NavBar>\n    </div>\n  );\n}\n\nexport default MenuBarView;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction SignInModalView({\n  show,\n  handleClose,\n  handleSignInInfoChange,\n  handleSignIn,\n  signingIn,\n  signInError\n}) {\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Sign In</Modal.Title>\n      </Modal.Header>\n      {signInError ? (\n        <Alert variant=\"danger\" className=\"text-center\">\n          <h5 className=\"mb-0\">{signInError}</h5>\n        </Alert>\n      ) : (\n        ''\n      )}\n      <Form onSubmit={handleSignIn}>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" name=\"email\" onChange={handleSignInInfoChange} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" name=\"password\" onChange={handleSignInInfoChange} />\n          </Form.Group>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\" disabled={signingIn}>\n            {signingIn ? (\n              <>\n                <Spinner as=\"span\" animation=\"border\" size=\"sm\" />{' '}\n              </>\n            ) : (\n              ''\n            )}\n            Sign In\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default SignInModalView;\n","import React, { useState } from 'react';\r\nimport { signIn } from '../services/Firebase';\r\nimport SignInModalView from './SignInModalView';\r\n\r\nfunction SignInModal({ show, handleSignInModalClose }) {\r\n  const [signInInfo, setSignInInfo] = useState({});\r\n  const [signingIn, setSigningIn] = useState(false);\r\n  const [signInError, setSignInError] = useState('');\r\n\r\n  const handleClose = () => {\r\n    handleSignInModalClose();\r\n    setSignInInfo({});\r\n    setSignInError('');\r\n  };\r\n\r\n  const handleSignInInfoChange = (e) =>\r\n    setSignInInfo({ ...signInInfo, [e.target.name]: e.target.value });\r\n\r\n  const handleSignIn = (e) => {\r\n    e.preventDefault();\r\n    setSigningIn(true);\r\n\r\n    if (validateSignInInfo(signInInfo.email, signInInfo.password)) {\r\n      signIn(signInInfo.email, signInInfo.password)\r\n        .then(() => {\r\n          setSigningIn(false);\r\n          handleClose();\r\n        })\r\n        .catch((error) => {\r\n          setSigningIn(false);\r\n\r\n          switch (error.code) {\r\n            case 'auth/user-not-found':\r\n              setSignInError('User not found.');\r\n              break;\r\n            case 'auth/wrong-password':\r\n              setSignInError('Incorrect password.');\r\n              break;\r\n            default:\r\n              setSignInError(error.message);\r\n              break;\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  // true = pass, false = fail\r\n  const validateSignInInfo = (email, password) => {\r\n    if (!email) {\r\n      setSigningIn(false);\r\n      setSignInError('Invalid email.');\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      setSigningIn(false);\r\n      setSignInError('Invalid password.');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <SignInModalView\r\n      show={show}\r\n      handleClose={handleClose}\r\n      handleSignInInfoChange={handleSignInInfoChange}\r\n      handleSignIn={handleSignIn}\r\n      signingIn={signingIn}\r\n      signInError={signInError}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SignInModal;\r\n","import React, { useContext, useState } from 'react';\nimport { UserContext } from '../utility/Context';\nimport { signOut as handleSignOut } from '../services/Firebase';\nimport MenuBarView from './MenuBarView';\nimport SignInModal from './SignInModal';\n\nfunction MenuBar() {\n  const { currentUser } = useContext(UserContext);\n  const [signInModalVisible, setSignInModalVisible] = useState(false);\n\n  const handleSignInModalOpen = () => setSignInModalVisible(true);\n  const handleSignInModalClose = () => setSignInModalVisible(false);\n\n  return (\n    <>\n      <SignInModal show={signInModalVisible} handleSignInModalClose={handleSignInModalClose} />\n      <MenuBarView\n        currentUser={currentUser}\n        handleSignOut={handleSignOut}\n        handleSignInModalOpen={handleSignInModalOpen}\n      />\n    </>\n  );\n}\n\nexport default MenuBar;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction HomeView() {\n  return (\n    <>\n      <Row>\n        <Col lg={2} />\n        <Col lg={7}>\n          <h1>Welcome!</h1>\n          <p>\n            This is my personal website, it hosts my personal projects and progress. You can see\n            them by clicking the links in the navigation bar over on the top. The website is using\n            React for its front-end, Firebase for its database, and it is hosting as a GitHub user\n            page, you can check out the source code{' '}\n            <a\n              href=\"https://github.com/ShouShou92410/ShouShou92410.github.io/tree/Source-Code\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              Here\n            </a>\n            . In the future, I want to create a back-end server and have the front-end use the APIs\n            to fetch data.\n          </p>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default HomeView;\n","import React from 'react';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\n\nfunction AboutSidePanelView() {\n  return (\n    <>\n      <Row className=\"justify-content-md-center\">\n        <Image src={`${process.env.PUBLIC_URL}/pp_200px.jpg`} roundedCircle />\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <p className=\"text-center\">\n          Hello, I'm Sean.\n          <br />\n          Welcome to my website!\n        </p>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <a href=\"https://github.com/ShouShou92410\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <Image src={`${process.env.PUBLIC_URL}/github.png`} />\n        </a>\n        <a\n          href=\"https://www.linkedin.com/in/yu-hsiang-wen-b61745144/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          <Image src={`${process.env.PUBLIC_URL}/linkedin.png`} />\n        </a>\n        <a href=\"https://steamcommunity.com/id/Seavanas\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <Image src={`${process.env.PUBLIC_URL}/steam.png`} />\n        </a>\n      </Row>\n    </>\n  );\n}\n\nexport default AboutSidePanelView;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport AboutSidePanelView from './AboutSidePanelView';\n\nfunction AboutView() {\n  return (\n    <>\n      <Row>\n        <Col lg={2} />\n        <Col lg={7}>\n          <h1>About</h1>\n          <hr />\n          <h5>Who?</h5>\n          <p>\n            My name is 文宥翔 or Yu-Hsiang Wen in English, you can also called me Sean Wen. I'm a\n            Taiwanese that came to Canada at the age of 12, after I finished my elementary school.\n            Currently I'm a University of Calgary student majoring in Computer Science.\n          </p>\n        </Col>\n        <Col lg={2}>\n          <AboutSidePanelView />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default AboutView;\n","import React from 'react';\nimport AboutView from './AboutView';\n\nfunction About() {\n  return <AboutView />;\n}\n\nexport default About;\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nfunction ManageVocabularyView({ fileInput, handleFileChange, handleInsert }) {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"mb-4\">Manage Vocabulary</h1>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Tabs defaultActiveKey=\"insert\" className=\"dark\">\r\n        <Tab eventKey=\"insert\" title=\"Insert\">\r\n          <Form className=\"mt-4\" onSubmit={handleInsert}>\r\n            <Form.Group as={Row}>\r\n              <Col sm={2} className=\"text-center\">\r\n                <Form.Label className=\"mt-2\">CSV File</Form.Label>\r\n              </Col>\r\n              <Col sm={10}>\r\n                <Form.File custom label={fileInput.name} name=\"file\" onChange={handleFileChange} />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Button size=\"sm\" variant=\"success\" type=\"submit\" className=\"float-right\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"update\" title=\"Update\" disabled></Tab>\r\n        <Tab eventKey=\"delete\" title=\"Delete\" disabled></Tab>\r\n      </Tabs>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManageVocabularyView;\r\n","function hasFileExtension(file, desiredExtension) {\r\n  return (\r\n    file.name\r\n      .split('.')\r\n      .pop()\r\n      .toLowerCase() === desiredExtension.toLowerCase()\r\n  );\r\n}\r\n\r\nfunction readFile(file) {\r\n  let fr = new FileReader();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    fr.onerror = () => {\r\n      fr.abort();\r\n      reject('Error occurs when trying to read the csv file.');\r\n    };\r\n\r\n    fr.onload = (e) => {\r\n      resolve(e.target.result);\r\n    };\r\n\r\n    fr.readAsText(file);\r\n  });\r\n}\r\n\r\nfunction CSVtoJSON(csvFile) {\r\n  return new Promise((resolve, reject) => {\r\n    readFile(csvFile)\r\n      .then((readResult) => {\r\n        let fileContent = readResult.split('\\n');\r\n        fileContent.pop(); //Remove last line break\r\n\r\n        fileContent = fileContent.map((x) => x.split(','));\r\n\r\n        let keys = fileContent.shift().map((key) => key.trim().toLowerCase()); //Remove first element, which is an array of keys\r\n        if (keys.length === [...new Set(keys)].length) {\r\n          const jsonResult = fileContent.map((row) => {\r\n            let rowObject = {};\r\n\r\n            keys.forEach((key, index) => {\r\n              rowObject[key] = row[index].trim();\r\n            });\r\n\r\n            return rowObject;\r\n          });\r\n\r\n          resolve(jsonResult);\r\n        } else {\r\n          alert('keys are not unique.');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n}\r\n\r\nexport default {\r\n  hasFileExtension: hasFileExtension,\r\n  CSVtoJSON: CSVtoJSON\r\n};\r\n","import React, { useState } from 'react';\r\nimport { insertVocabulary } from '../../services/Firebase';\r\nimport ManageVocabularyView from './ManageVocabularyView';\r\nimport FileHelper from '../../utility/FileHelper';\r\n\r\nfunction ManageVocabulary() {\r\n  const [fileInput, setFileInput] = useState({ name: 'No file chosen' });\r\n\r\n  const handleFileChange = (e) => setFileInput(e.target.files[0] || { name: 'No file chosen' });\r\n  const handleInsert = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (FileHelper.hasFileExtension(fileInput, 'csv')) {\r\n      const jsonResult = await FileHelper.CSVtoJSON(fileInput);\r\n      jsonResult.forEach((Vocabulary) => insertVocabulary(Vocabulary));\r\n    } else {\r\n      alert('Please provide a csv file.');\r\n    }\r\n\r\n    setFileInput({ name: 'No file chosen' });\r\n  };\r\n\r\n  return (\r\n    <ManageVocabularyView\r\n      fileInput={fileInput}\r\n      handleFileChange={handleFileChange}\r\n      handleInsert={handleInsert}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ManageVocabulary;\r\n","import React from 'react';\r\nimport { NavLink, Switch, Route } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport ManageVocabulary from './table/ManageVocabulary';\r\n\r\nfunction ManagementView({ tables }) {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col lg={2} />\r\n        <Col lg={7}>\r\n          <Switch>\r\n            <Route path=\"/management/vocabulary\">\r\n              <ManageVocabulary />\r\n            </Route>\r\n            <Route path=\"/management\">\r\n              <ManageVocabulary />\r\n            </Route>\r\n          </Switch>\r\n        </Col>\r\n        <Col lg={2}>\r\n          <Nav className=\"d-block\">\r\n            {tables.map((table) => (\r\n              <Nav.Link\r\n                key={table}\r\n                as={NavLink}\r\n                to={`/management/${table}`}\r\n                className=\"dark\"\r\n                activeClassName=\"active\">\r\n                {table}\r\n              </Nav.Link>\r\n            ))}\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManagementView;\r\n","import React, { useContext } from 'react';\r\nimport { UserContext } from '../utility/Context';\r\nimport ManagementView from './ManagementView';\r\n\r\nfunction Management() {\r\n  const { currentUser } = useContext(UserContext);\r\n  const tables = ['vocabulary'];\r\n\r\n  return currentUser && <ManagementView tables={tables} />;\r\n}\r\n\r\nexport default Management;\r\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { QuizEnumeration } from '../../utility/Enumeration';\n\nfunction QuizSettingView({ quizSetting, handleFormChange, handleSubmit }) {\n  const renderOtherSettingString = () => {\n    switch (quizSetting.mode) {\n      case QuizEnumeration.Mode.QUICK:\n        return 'Total Questions';\n      case QuizEnumeration.Mode.SURVIVAL:\n        return 'Total Lives';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <>\n      <h1>Initial Setup</h1>\n      <hr />\n      <Form className=\"mt-4\" onSubmit={handleSubmit}>\n        <Form.Group as={Row}>\n          <Col sm={2} className=\"text-center\">\n            <Form.Label className=\"mt-2\">Quiz Mode</Form.Label>\n          </Col>\n          <Col sm={10}>\n            <Form.Control\n              as=\"select\"\n              name=\"mode\"\n              value={quizSetting.mode}\n              onChange={handleFormChange}>\n              {Object.values(QuizEnumeration.Mode).map((mode) => (\n                <option key={mode}>{mode}</option>\n              ))}\n            </Form.Control>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Col sm={2} className=\"text-center\">\n            <Form.Label className=\"mt-2\">Quiz Format</Form.Label>\n          </Col>\n          <Col sm={10}>\n            <Form.Control\n              as=\"select\"\n              name=\"format\"\n              value={quizSetting.format}\n              onChange={handleFormChange}>\n              {Object.values(QuizEnumeration.Format).map((format) => (\n                <option key={format}>{format}</option>\n              ))}\n            </Form.Control>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Col sm={2} className=\"text-center\">\n            <Form.Label className=\"mt-2\">{renderOtherSettingString()}</Form.Label>\n          </Col>\n          <Col sm={10}>\n            <Form.Control\n              as=\"input\"\n              name=\"total\"\n              value={quizSetting.total}\n              onChange={handleFormChange}\n            />\n          </Col>\n        </Form.Group>\n\n        <Row>\n          <Col sm={4} />\n          <Col sm={4} className=\"text-center\">\n            <Button variant=\"success\" type=\"submit\" block>\n              Start\n            </Button>\n          </Col>\n          <Col sm={4} />\n        </Row>\n      </Form>\n    </>\n  );\n}\n\nexport default QuizSettingView;\n","import React, { useEffect } from 'react';\nimport { QuizEnumeration } from '../../utility/Enumeration';\nimport QuizInitializationView from './QuizInitializationView';\n\nfunction QuizInitialization({ quizSetting, setQuizSetting, setQuizState }) {\n  useEffect(() => {\n    setQuizSetting({\n      mode: QuizEnumeration.Mode.QUICK,\n      format: QuizEnumeration.Format.JPK_EN,\n      total: ''\n    });\n  }, [setQuizSetting]);\n\n  const validateFormInput = () => {\n    const regex = /^[0-9\\b]+$/;\n\n    if (!regex.test(quizSetting.total) || quizSetting.total < 0) {\n      switch (quizSetting.mode) {\n        case QuizEnumeration.Mode.QUICK:\n          alert('Please enter a number greater than 0 for Total Questions.');\n          return false;\n        case QuizEnumeration.Mode.SURVIVAL:\n          alert('Please enter a number greater than 0 for Total Lives.');\n          return false;\n        default:\n          alert('');\n          return false;\n      }\n    }\n\n    return true;\n  };\n\n  const handleFormChange = (e) =>\n    setQuizSetting({ ...quizSetting, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!validateFormInput()) return;\n\n    setQuizState(QuizEnumeration.State.ONGOING);\n  };\n\n  return (\n    <QuizInitializationView\n      quizSetting={quizSetting}\n      handleFormChange={handleFormChange}\n      handleSubmit={handleSubmit}\n    />\n  );\n}\n\nexport default QuizInitialization;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nfunction QuizOptionView({ option, selectedOptionID, isCorrect, handleOptionSelect }) {\n  return (\n    <Button\n      variant={selectedOptionID === option.ID ? 'dark' : 'outline-dark'}\n      className=\"w-100\"\n      disabled={isCorrect !== null}\n      value={option.ID}\n      onClick={handleOptionSelect}>\n      {option.value}\n    </Button>\n  );\n}\n\nexport default QuizOptionView;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport QuizOptionView from './QuizOptionView';\n\nfunction QuizQuestionCardView({\n  vocabQuestion,\n  selectedOptionID,\n  isCorrect,\n  handleOptionSelect,\n  handleConfirm,\n  handleNext\n}) {\n  const renderResultAlert = (isCorrect) => (\n    <Alert variant={isCorrect ? 'success' : 'danger'}>\n      <Row>\n        <Col />\n        <Col>\n          <h3>{isCorrect ? 'CORRECT' : 'WRONG'}</h3>\n        </Col>\n        <Col>\n          <Button\n            variant={isCorrect ? 'outline-success' : 'outline-danger'}\n            className=\"float-right\"\n            onClick={handleNext}>\n            Next\n          </Button>\n        </Col>\n      </Row>\n    </Alert>\n  );\n\n  return (\n    <>\n      <Card className=\"mt-3 mb-3\">\n        <Card.Header>Question {vocabQuestion.questionNumber}</Card.Header>\n        <Card.Body className=\"text-center\">\n          <Card.Title className=\"mt-3 mb-5\">\n            <h1>{vocabQuestion.question}</h1>\n          </Card.Title>\n          <div className=\"mt-5 mb-3\">\n            <Row className=\"m-3\">\n              <Col sm={3} />\n              <Col sm={3}>\n                <QuizOptionView\n                  option={vocabQuestion.options[0]}\n                  selectedOptionID={selectedOptionID}\n                  isCorrect={isCorrect}\n                  handleOptionSelect={handleOptionSelect}\n                />\n              </Col>\n              <Col sm={3}>\n                <QuizOptionView\n                  option={vocabQuestion.options[1]}\n                  selectedOptionID={selectedOptionID}\n                  isCorrect={isCorrect}\n                  handleOptionSelect={handleOptionSelect}\n                />\n              </Col>\n              <Col sm={3} />\n            </Row>\n            <Row className=\"m-3\">\n              <Col sm={3} />\n              <Col sm={3}>\n                <QuizOptionView\n                  option={vocabQuestion.options[2]}\n                  selectedOptionID={selectedOptionID}\n                  isCorrect={isCorrect}\n                  handleOptionSelect={handleOptionSelect}\n                />\n              </Col>\n              <Col sm={3}>\n                <QuizOptionView\n                  option={vocabQuestion.options[3]}\n                  selectedOptionID={selectedOptionID}\n                  isCorrect={isCorrect}\n                  handleOptionSelect={handleOptionSelect}\n                />\n              </Col>\n              <Col sm={3} />\n            </Row>\n          </div>\n          {isCorrect === null ? (\n            <Row className=\"m-3\">\n              <Col sm={3} />\n              <Col sm={6}>\n                <Button\n                  variant=\"secondary\"\n                  block\n                  onClick={() => {\n                    handleConfirm();\n                  }}>\n                  Confirm\n                </Button>\n              </Col>\n              <Col sm={3} />\n            </Row>\n          ) : (\n            renderResultAlert(isCorrect)\n          )}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default QuizQuestionCardView;\n","import React, { useState } from 'react';\nimport QuizQuestionCardView from './QuizQuestionCardView';\n\nfunction QuizQuestionCard({ vocabQuestion, handleNextQuestion }) {\n  const [selectedOptionID, setSelectedOptionID] = useState('');\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  const handleOptionSelect = (e) => {\n    setSelectedOptionID(e.target.value);\n  };\n\n  const handleConfirm = () => {\n    if (!selectedOptionID) {\n      alert('Please pick an answer first.');\n      return;\n    }\n    if (vocabQuestion.ID === selectedOptionID) setIsCorrect(true);\n    else setIsCorrect(false);\n  };\n\n  const handleNext = () => {\n    handleNextQuestion(selectedOptionID);\n    setSelectedOptionID('');\n    setIsCorrect(null);\n  };\n\n  return (\n    <QuizQuestionCardView\n      vocabQuestion={vocabQuestion}\n      selectedOptionID={selectedOptionID}\n      isCorrect={isCorrect}\n      handleOptionSelect={handleOptionSelect}\n      handleConfirm={handleConfirm}\n      handleNext={handleNext}\n    />\n  );\n}\n\nexport default QuizQuestionCard;\n","import React from 'react';\nimport QuizQuestionCard from '../QuizQuestionCard';\n\nfunction QuizQuickOngoingView({ currentQuestion, handleNextQuestion }) {\n  return (\n    <>\n      <h1>Quiz in progress...</h1>\n      <hr />\n      <QuizQuestionCard vocabQuestion={currentQuestion} handleNextQuestion={handleNextQuestion} />\n    </>\n  );\n}\n\nexport default QuizQuickOngoingView;\n","import React, { useState, useEffect } from 'react';\nimport { getVocabularyQuestion } from '../../../services/Firebase';\nimport QuizQuickOngoingView from './QuizQuickOngoingView';\nimport { QuizEnumeration } from '../../../utility/Enumeration';\n\nfunction QuizQuickOngoing({ quizSetting, setQuizResults, setQuizState }) {\n  const [questions, setQuestions] = useState([]);\n  const [results, setResults] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState();\n\n  //setCurrentQuestion, with options\n  //setResults\n  //if last question, setQuizResults with results\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      setQuestions(await getVocabularyQuestion(quizSetting));\n    };\n    fetchQuestion();\n  }, [quizSetting]);\n\n  useEffect(() => {\n    if (questions.length > 0 && questionIndex === questions.length) {\n      setQuizResults(results);\n      setQuizState(QuizEnumeration.State.FINISH);\n    } else {\n      setCurrentQuestion(questions[questionIndex]);\n    }\n  }, [questions, questionIndex, results, setQuizResults, setQuizState]);\n\n  const handleNextQuestion = (selectedOptionID) => {\n    setResults([...results, { ...currentQuestion, selectedOptionID: selectedOptionID }]);\n    setQuestionIndex(questionIndex + 1);\n  };\n\n  return (\n    (currentQuestion && (\n      <QuizQuickOngoingView\n        currentQuestion={currentQuestion}\n        handleNextQuestion={handleNextQuestion}\n      />\n    )) || <h1>loading...</h1>\n  );\n}\n\nexport default QuizQuickOngoing;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nfunction QuizResultCardView({ questionResult }) {\n  const renderOption = (option) => {\n    let buttonVariant = 'outline-dark';\n    if (\n      option.ID === questionResult.selectedOptionID &&\n      questionResult.selectedOptionID !== questionResult.ID\n    )\n      buttonVariant = 'danger';\n    else if (option.ID === questionResult.ID) buttonVariant = 'success';\n\n    return (\n      <Button variant={buttonVariant} className=\"w-100\" disabled>\n        {option.value}\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <Card className=\"mt-3 mb-3\">\n        <Card.Header>Question {questionResult.questionNumber}</Card.Header>\n        <Card.Body className=\"text-center pt-0\">\n          <Card.Title className=\"mt-2\">\n            <h2>{questionResult.question}</h2>\n          </Card.Title>\n          <Row className=\"mt-3 mb-3\">\n            <Col sm={6}>{renderOption(questionResult.options[0])}</Col>\n            <Col sm={6}>{renderOption(questionResult.options[1])}</Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col sm={6}>{renderOption(questionResult.options[2])}</Col>\n            <Col sm={6}>{renderOption(questionResult.options[3])}</Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default QuizResultCardView;\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport QuizResultCardView from './QuizResultCardView';\r\n\r\nfunction QuizFinishView({ quizResults, handleAgain }) {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col lg={10}>\r\n          <h1>Let's see how you did!</h1>\r\n        </Col>\r\n        {\r\n          <Col lg={2}>\r\n            <Button variant=\"success\" className=\"mt-1 w-100\" onClick={handleAgain}>\r\n              Again!\r\n            </Button>\r\n          </Col>\r\n        }\r\n      </Row>\r\n      <hr />\r\n      {quizResults.map((questionResult) => (\r\n        <QuizResultCardView key={questionResult.ID} questionResult={questionResult} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuizFinishView;\r\n","import React from 'react';\nimport { QuizEnumeration } from '../../utility/Enumeration';\nimport QuizFinishView from './QuizFinishView';\n\nfunction QuizFinish({ quizResults, setQuizState }) {\n  const handleAgain = () => setQuizState(QuizEnumeration.State.INITIALIZATION);\n\n  return <QuizFinishView quizResults={quizResults} handleAgain={handleAgain} />;\n}\n\nexport default QuizFinish;\n","import React, { useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { QuizEnumeration } from '../utility/Enumeration';\r\nimport QuizInitialization from './initialization/QuizInitialization';\r\nimport QuizQuickOngoing from './ongoing/quick/QuizQuickOngoing';\r\nimport QuizFinish from './finish/QuizFinish';\r\n\r\nfunction Quiz() {\r\n  const [quizState, setQuizState] = useState(QuizEnumeration.State.INITIALIZATION);\r\n  const [quizSetting, setQuizSetting] = useState({\r\n    mode: QuizEnumeration.Mode.QUICK,\r\n    format: QuizEnumeration.Format.JPK_EN,\r\n    total: ''\r\n  });\r\n  const [quizResults, setQuizResults] = useState([]);\r\n\r\n  const renderView = () => {\r\n    switch (quizState) {\r\n      case QuizEnumeration.State.INITIALIZATION:\r\n        return (\r\n          <QuizInitialization\r\n            quizSetting={quizSetting}\r\n            setQuizSetting={setQuizSetting}\r\n            setQuizState={setQuizState}\r\n          />\r\n        );\r\n      case QuizEnumeration.State.ONGOING:\r\n        switch (quizSetting.mode) {\r\n          case QuizEnumeration.Mode.QUICK:\r\n            return (\r\n              <QuizQuickOngoing\r\n                quizSetting={quizSetting}\r\n                setQuizResults={setQuizResults}\r\n                setQuizState={setQuizState}\r\n              />\r\n            );\r\n          case QuizEnumeration.Mode.SURVIVAL:\r\n            return (\r\n              <QuizQuickOngoing\r\n                quizSetting={quizSetting}\r\n                setQuizResults={setQuizResults}\r\n                setQuizState={setQuizState}\r\n              />\r\n            );\r\n          default:\r\n            return;\r\n        }\r\n      case QuizEnumeration.State.FINISH:\r\n        return <QuizFinish quizResults={quizResults} setQuizState={setQuizState} />;\r\n      default:\r\n        return (\r\n          <QuizInitialization\r\n            quizSetting={quizSetting}\r\n            setQuizSetting={setQuizSetting}\r\n            setQuizState={setQuizState}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col lg={2} />\r\n        <Col lg={7}>{renderView()}</Col>\r\n        <Col lg={2}>{/* <h4>description</h4> */}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction BlogPostCardView({ post }) {\r\n  return (\r\n    <>\r\n      <Card className=\"m-3\">\r\n        <Card.Header>\r\n          <Row>\r\n            <Col sm={9}>\r\n              <Card.Title className=\"m-0\">{post.title}</Card.Title>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <Card.Subtitle className=\"m-0 text-muted float-right\">\r\n                {post.datePosted}\r\n              </Card.Subtitle>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body className=\"pb-1\">\r\n          <Card.Text className=\"mb-0 blog-post-preview\">{post.content}</Card.Text>\r\n          <Card.Link as={Link} to={`/blog/read/${post.ID}`} className=\"dark float-right text-sm\">\r\n            read more\r\n          </Card.Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogPostCardView;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport BlogPostCardView from './BlogPostCardView';\r\n\r\nfunction BlogPostListView({ currentUser, posts }) {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col lg={10}>\r\n          <h1>Blog</h1>\r\n        </Col>\r\n        {currentUser && (\r\n          <Col lg={2}>\r\n            <Button variant=\"success\" as={Link} to={`/blog/new`} className=\"mt-1 w-100\">\r\n              New Post\r\n            </Button>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n      <hr />\r\n      {posts.map((post) => (\r\n        <BlogPostCardView key={post.ID} post={post} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogPostListView;\r\n","import React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../../utility/Context';\nimport { getAllBlogPost } from '../../services/Firebase';\nimport BlogPostListView from './BlogPostListView';\n\nfunction BlogPostList() {\n  const { currentUser } = useContext(UserContext);\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchAllBlogPost = async () => {\n      setPosts((await getAllBlogPost()).reverse());\n    };\n    fetchAllBlogPost();\n  }, []);\n\n  return <BlogPostListView currentUser={currentUser} posts={posts} />;\n}\n\nexport default BlogPostList;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction BlogPostReadView({ currentUser, post, handleDelete }) {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col lg={8}>\r\n          <h1>{post.title}</h1>\r\n        </Col>\r\n        <Col lg={4}>\r\n          <Row style={{ height: '60%' }}>\r\n            {currentUser && (\r\n              <>\r\n                <Col lg={6}>\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    size=\"sm\"\r\n                    as={Link}\r\n                    to={`/blog/edit/${post.ID}`}\r\n                    className=\"w-100\">\r\n                    Edit\r\n                  </Button>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <Button variant=\"danger\" size=\"sm\" onClick={handleDelete} className=\"w-100\">\r\n                    Delete\r\n                  </Button>\r\n                </Col>\r\n              </>\r\n            )}\r\n          </Row>\r\n          <Row>\r\n            <Col lg={12} align=\"right\">\r\n              {post.datePosted}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <hr />\r\n      <Row>\r\n        <Col lg={8} />\r\n      </Row>\r\n      <p className=\"mt-2\">{post.content}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogPostReadView;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../../utility/Context';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getBlogPost, deleteBlogPost } from '../../services/Firebase';\r\nimport BlogPostReadView from './BlogPostReadView';\r\n\r\nfunction BlogPostRead() {\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  const [ID, setID] = useState(window.location.href.split('/').pop());\r\n  const [post, setPost] = useState({});\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getBlogPost(ID).then((snapshot) => {\r\n      setPost({\r\n        ID: ID,\r\n        ...snapshot.val()\r\n      });\r\n    });\r\n  }, [ID]);\r\n\r\n  const handleDelete = () => {\r\n    deleteBlogPost(ID);\r\n    setID(null);\r\n    history.push('/blog');\r\n  };\r\n\r\n  return <BlogPostReadView currentUser={currentUser} post={post} handleDelete={handleDelete} />;\r\n}\r\n\r\nexport default BlogPostRead;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction BlogPostNewView({ handleFormChange, handleSubmit }) {\r\n  return (\r\n    <>\r\n      <h2>Create New Post</h2>\r\n      <Form className=\"mt-2\" onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            type=\"text\"\r\n            placeholder=\"Post title\"\r\n            name=\"title\"\r\n            onChange={handleFormChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <hr />\r\n\r\n        <Form.Group>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n            placeholder=\"Post content\"\r\n            name=\"content\"\r\n            onChange={handleFormChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"float-right\">\r\n          <Button variant=\"secondary\" as={Link} to={`/blog`} className=\"ml-1\">\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"success\" type=\"submit\" className=\"ml-1\">\r\n            Create\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogPostNewView;\r\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { createBlogPost } from '../../services/Firebase';\nimport { UserContext } from '../../utility/Context';\nimport BlogPostNewView from './BlogPostNewView';\n\nfunction BlogPostNew() {\n  const { currentUser } = useContext(UserContext);\n  const [formInput, setFormInput] = useState({});\n  const history = useHistory();\n\n  const handleFormChange = (e) => setFormInput({ ...formInput, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let error = '';\n    if (!formInput.title) error += 'Invalid title.\\n';\n    if (!formInput.content) error += 'Invalid content.\\n';\n    if (error) alert(error);\n    else {\n      createBlogPost(formInput);\n      setFormInput({});\n      history.push('/blog');\n    }\n  };\n\n  return (\n    currentUser && (\n      <BlogPostNewView handleFormChange={handleFormChange} handleSubmit={handleSubmit} />\n    )\n  );\n}\n\nexport default BlogPostNew;\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction BlogPostEditView({ formInput, handleFormChange, handleSubmit }) {\r\n  return (\r\n    <>\r\n      <h2>Edit Post</h2>\r\n      <Form className=\"mt-2\" onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            type=\"text\"\r\n            placeholder=\"Post title\"\r\n            name=\"title\"\r\n            value={formInput.title}\r\n            onChange={handleFormChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <hr />\r\n\r\n        <Form.Group>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n            placeholder=\"Post content\"\r\n            name=\"content\"\r\n            value={formInput.content}\r\n            onChange={handleFormChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"warning\" type=\"submit\" className=\"float-right\">\r\n          Edit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogPostEditView;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../utility/Context';\r\nimport { getBlogPost, editBlogPost } from '../../services/Firebase';\r\nimport BlogPostEditView from './BlogPostEditView';\r\n\r\nfunction BlogPostEdit() {\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  const [ID, setID] = useState(window.location.href.split('/').pop());\r\n  const [formInput, setFormInput] = useState({ title: '', content: '' });\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getBlogPost(ID).then((snapshot) => {\r\n      setFormInput({\r\n        ID: ID,\r\n        ...snapshot.val()\r\n      });\r\n    });\r\n  }, [ID]);\r\n\r\n  const handleFormChange = (e) => setFormInput({ ...formInput, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let error = '';\r\n    if (!formInput.title) error += 'Invalid title.\\n';\r\n    if (!formInput.content) error += 'Invalid content.\\n';\r\n    if (error) alert(error);\r\n    else {\r\n      editBlogPost({ id: ID, ...formInput });\r\n      setFormInput({});\r\n      setID(null);\r\n      history.push('/blog');\r\n    }\r\n  };\r\n\r\n  return (\r\n    currentUser && (\r\n      <BlogPostEditView\r\n        formInput={formInput}\r\n        handleFormChange={handleFormChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nexport default BlogPostEdit;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport BlogPostList from './list/BlogPostList';\r\nimport BlogPostRead from './read/BlogPostRead';\r\nimport BlogPostNew from './new/BlogPostNew';\r\nimport BlogPostEdit from './edit/BlogPostEdit';\r\nimport AboutSidePanelView from '../about/AboutSidePanelView';\r\n\r\nfunction BlogView() {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col lg={2} />\r\n        <Col lg={7}>\r\n          <Switch>\r\n            <Route path=\"/blog/read/:ID\">\r\n              <BlogPostRead />\r\n            </Route>\r\n            <Route path=\"/blog/new\">\r\n              <BlogPostNew />\r\n            </Route>\r\n            <Route path=\"/blog/edit/:ID\">\r\n              <BlogPostEdit />\r\n            </Route>\r\n            <Route path=\"/blog\">\r\n              <BlogPostList />\r\n            </Route>\r\n          </Switch>\r\n        </Col>\r\n        <Col lg={2}>\r\n          <AboutSidePanelView />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogView;\r\n","import React from 'react';\nimport BlogView from './BlogView';\n\nfunction Blog() {\n  return <BlogView />;\n}\n\nexport default Blog;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport HomeView from './HomeView';\nimport About from '../about/About';\nimport Management from '../management/Management';\nimport Quiz from '../quiz/Quiz';\nimport Blog from '../blog/Blog';\n\nfunction ContentView() {\n  return (\n    <Container fluid className=\"mt-2\">\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/quiz\">\n          <Quiz />\n        </Route>\n        <Route path=\"/blog\">\n          <Blog />\n        </Route>\n        <Route path=\"/management\">\n          <Management />\n        </Route>\n        <Route path=\"/\">\n          <HomeView />\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default ContentView;\n","import React from 'react';\nimport ContentView from './ContentView';\n\nfunction Content() {\n  return <ContentView />;\n}\n\nexport default Content;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { UserContext } from '../utility/Context';\nimport { firebase } from '../services/Firebase';\nimport MenuBar from './MenuBar';\nimport Content from './Content';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [authorizing, setAuthorizing] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setCurrentUser(authUser);\n        setAuthorizing(true);\n      } else {\n        setCurrentUser(null);\n        setAuthorizing(true);\n      }\n    });\n  }, []);\n\n  return authorizing ? (\n    <UserContext.Provider value={{ currentUser }}>\n      <BrowserRouter>\n        <MenuBar />\n        <Content />\n      </BrowserRouter>\n    </UserContext.Provider>\n  ) : (\n    <div>Waiting for auth...</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './root/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}